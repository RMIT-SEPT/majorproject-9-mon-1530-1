version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build-common: # runs not using Workflows must have a `build` job as entry point
    
    #working_directory: ~/BackEnd/Common # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-stretch # ...with this image as the primary container; this is where all `steps` will run
    
    steps: # a collection of executable commands 

      - run: echo "------------ START ---------------"
      - run: echo working_directory $working_directory
      - run: pwd

      - checkout # check out source code to working directory

      - run: ls -l
      - run: pwd

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: sept-p9-common-service-{{ checksum "BackEnd/Common/pom.xml" }}
      
      
      - run: cd BackEnd/Common && mvn dependency:go-offline # gets the project dependencies
      
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: sept-p9-common-service-{{ checksum "BackEnd/Common/pom.xml" }}
      
      - run: cd BackEnd/Common && mvn package # run the actual tests
      
      - run: ls ../.m2 -R
            
      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard. 
      # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: BackEnd/Common/target/surefire-reports
      
      - store_artifacts: # store the uberjar as an artifact
      # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: BackEnd/Common/target/common-1.1.1.jar
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples  
      
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is 
          # taken to be the root directory of the workspace.
          root: BackEnd/
          # Must be relative path from root
          paths:
            - Common/target/common-1.1.1.jar
            - Common/pom.xml
        
  build-availability: # runs not using Workflows must have a `build` job as entry point
    
    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-stretch # ...with this image as the primary container; this is where all `steps` will run
    
    steps: # a collection of executable commands 

      - run: echo "------------ START ---------------"
      - run: echo working_directory $working_directory
      - run: pwd

      - checkout # check out source code to working directory

      - run: ls -l
      - run: pwd

      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: dependency
          
      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: sept-p9-Availability-service-{{ checksum "BackEnd/Availability/pom.xml" }}
      
      - run: ls -l && ls dependency -l && ls dependency/Common -l 
      - run: mvn deploy:deploy-file -Durl=file://.m2 -Dfile=dependency/Common/target/common-1.1.1.jar -DpomFile=dependency/Common/pom.xml -DgroupId=sept.major -DartifactId=common -Dpackaging=jar -Dversion=1.1.1
      
      - run: ls ../.m2 -R
      
      - run: cat ../.m2/repository/sept/major/common/*
      
      - run: cd BackEnd/Availability && mvn dependency:go-offline -Dmaven.repo.local=../.m2 # gets the project dependencies
      
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: sept-p9-Availability-service-{{ checksum "BackEnd/Availability/pom.xml" }}
      
      - run: cd BackEnd/Availability && mvn package # run the actual tests
      
      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard. 
      # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: BackEnd/Availability/target/surefire-reports
      
      - store_artifacts: # store the uberjar as an artifact
      # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: BackEnd/Availability/target/Availability-0.1.1-SNAPSHOT.jar
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples  
        
        
        
        
workflows:
  version: 2
  workflow:
    jobs:
    - build-common
    - build-availability:
        requires:
          - build-common