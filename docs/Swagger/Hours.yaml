swagger: '2.0'
info:
  description: API for managing and retrieving worker hours
  version: 1.0.0
  title: Hours API
  # put the contact info for your development or API team
  contact:
    email: s3718834@student.rmit.edu.au

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

paths:
  /hours/range:
    get:
      summary: Worker hours for provided date range
      operationId: getHoursForTimeframe
      description: |
        Gets all worker hours within provided date range
      produces:
      - application/json
      parameters:
      - in: query
        name: startDate
        description: The lower bound for the date range to filter to
        required: false
        type: string
      - in: query
        name: endDate
        description: The upper bound for the date range to filter to
        required: false
        type: string  
      - in: query
        name: workerUsername
        description: Filter worker hours to those provided by workers
        required: false
        type: array
        items:
          type: string  
      responses:
        200:
          description: all worker hours for date
          schema:
            type: array
            items:
              $ref: '#/definitions/singleDate'
        404:
          description: no hours found 
        400:
          description: invalid request
  /hours/date:
    get:
      summary: Worker hours for provided date
      operationId: getHoursForDate
      description: |
        Gets all worker hours on provided date
      produces:
      - application/json
      parameters:
      - in: query
        name: date
        description: The date which the worker hours would be on
        required: true
        type: string
      - in: query
        name: workerUsername
        description: Filter worker hours to those provided by workers
        required: false
        type: array
        items:
          type: string
      responses:
        200:
          description: all worker hours for date
          schema:
            $ref: '#/definitions/singleDate'
        404:
          description: no hours found 
        400:
          description: invalid request        
  /hours/all:
    get:
      summary: All worker hours
      operationId: getAllHours
      description: |
        Gets all worker hours within provided timeframe
      produces:
      - application/json
      parameters:
      - in: query
        name: workerUsername
        description: Filter worker hours to those provided by workers
        required: false
        type: array
        items:
          type: string  
      responses:
        200:
          description: all worker hours
          schema:
            type: array
            items:
              $ref: '#/definitions/singleDate'
        404:
          description: no hours found 
        400:
          description: invalid request        
  /hours:
    post:
      summary: Assign worker hours 
      consumes:
        - application/json
      parameters:
        - in: body
          name: hours
          schema:
            type: object
            required:
              - userType
              - name
              - username
              - password
            properties:
              workerUserName:
                type: string
                description: The username of the worker who the hours will be assigned to
              createdBy:
                type: string
                description: The username of the admin who assigned these hours
              date:
                type: string
                description: The date that the hours occur
                example: '24/07/2002'
                pattern: 'MM/DD/YYYY'
              startTime:
                type: string
                description: the starting time of hours being assigned
                example: 09:00
                pattern: 'HH:MM'
              endTime:
                type: string
                description: the ending time of hours being assigned
                example: 17:00
                pattern: 'HH:MM'
      responses:
        400:
          description: invalid input
        409:
          description: worker is already assigned part of or all of these hours
        200:
          description: hours correctly assigned
          schema:
              $ref: '#/definitions/singleDate'
    delete:
      summary: Unassign hours
      operationId: deleteHours
      description: |
        Unassign hours that been assigned to a worker
      parameters:
      - in: body
        name: hours
        schema:
          type: object
          properties:
            date:
              type: array
              items:
                type: object
                properties:
                  workerUserName:
                    type: string
                    description: The username of the worker who the hours will be assigned to
                    example: JamesSmith
                  createdBy:
                    type: string
                    description: The username of the admin who assigned these hours
                    example: TheBigAdmin
                  date:
                    type: string
                    description: The date that the hours occur
                    example: '24/07/2002'
                    pattern: 'MM/DD/YYYY'
                  startTime:
                    type: string
                    description: the starting time of hours being assigned
                    example: '09:00'
                    pattern: 'HH:MM'
                  endTime:
                    type: string
                    description: the ending time of hours being assigned
                    example: '17:00'
                    pattern: 'HH:MM'
      responses:
        200:
          description: hours successfully unassigned
        400:
          description: invalid request
        404:
          description: some of or all of the hours weren't assigned
 
definitions:
  singleDate:
      properties:
            date:
              type: array
              items:
                type: object
                properties:
                  workerUserName:
                    type: string
                    description: The username of the worker who the hours will be assigned to
                    example: JamesSmith
                  createdBy:
                    type: string
                    description: The username of the admin who assigned these hours
                    example: TheBigAdmin
                  date:
                    type: string
                    description: The date that the hours occur
                    example: '24/07/2002'
                    pattern: 'MM/DD/YYYY'
                  startTime:
                    type: string
                    description: the starting time of hours being assigned
                    example: '09:00'
                    pattern: 'HH:MM'
                  endTime:
                    type: string
                    description: the ending time of hours being assigned
                    example: '17:00'
                    pattern: 'HH:MM'
          
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
# basePath: /SEPT-Assignment-One/Bookings/1.0.0
schemes:
 - https
# Added by API Auto Mocking Plugin
# basePath: /SEPT-Assignment-One/User/1.0.0
# Added by API Auto Mocking Plugin
basePath: /SEPT-Assignment-One/Hours/1.0.0